extend type Mutation {
  "タスクを作成する"
  createTask(input: CreateTaskInput! @spread): Task!
    @guard
    @field(resolver: "App\\GraphQL\\Mutations\\Task\\CreateTask")

  "タスク情報を更新する"
  updateTask(input: UpdateTaskInput! @spread): Task!
    @guard
    @can(ability: "update", query: true)
    @field(resolver: "App\\GraphQL\\Mutations\\Task\\UpdateTask")

  "タスクを削除する"
  deleteTask(id: ID! @eq): Task
    @guard
    @can(ability: "delete", query: true)
    @delete
    @validator(class: "App\\GraphQL\\Validators\\Task\\DeleteTaskValidator")
}

input CreateTaskInput @validator(class: "App\\GraphQL\\Validators\\Task\\CreateTaskValidator") {
  title: String!
  text: String!
}

input UpdateTaskInput @validator(class: "App\\GraphQL\\Validators\\Task\\UpdateTaskValidator") {
  id: ID! @eq
  task_status_id: Int!
  title: String!
  text: String!
}

# type CreateTaskPayload {

# }

# type UpdateTaskPayload {
#   task: Task!
# }
